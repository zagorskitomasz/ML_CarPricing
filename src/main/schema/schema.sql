DROP TABLE IF EXISTS PARAMS;
DROP TABLE IF EXISTS CAR_TYPES;

CREATE TABLE PARAMS
(
  ID SERIAL PRIMARY KEY,
  NAME VARCHAR(100) NOT NULL UNIQUE,
  VALUE VARCHAR(1000),
  CHANGED TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE CAR_TYPES
(
  ID INTEGER PRIMARY KEY,
  NAME VARCHAR(100) NOT NULL,
  PARENT INTEGER DEFAULT NULL
);

CREATE OR REPLACE FUNCTION 
  UPDATE_PARAM_CHANGE_TIME() 
  RETURNS TRIGGER AS
$BODY$
BEGIN
  IF NEW.VALUE <> OLD.VALUE THEN
    UPDATE PARAMS SET CHANGED = CURRENT_TIMESTAMP WHERE ID = NEW.ID;
  END IF;
  RETURN NEW;
END
$BODY$

LANGUAGE plpgsql VOLATILE;

CREATE TRIGGER PARAMS_UPD AFTER UPDATE ON PARAMS
  FOR EACH ROW EXECUTE PROCEDURE UPDATE_PARAM_CHANGE_TIME();

INSERT INTO PARAMS (NAME,VALUE) VALUES ('ACCESS_TOKEN','');
INSERT INTO PARAMS (NAME,VALUE) VALUES ('REFRESH_TOKEN','');
